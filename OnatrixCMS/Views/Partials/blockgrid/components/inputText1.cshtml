@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using static Umbraco.Cms.Core.PropertyEditors.ValueConverters.ColorPickerValueConverter;

@{
    var uniqueName = Model?.Content.Value<string>("uniqueName") ?? null;
    var labelText = Model?.Content.Value<string>("labelText") ?? "";
    var inputType = Model?.Content.Value<string>("inputType") ?? "";
    bool isRequired = (Model!.Content.Value<bool>("isRequired")) ? true : false;
    var inputPlaceholderText = Model?.Content.Value<string>("placeholderText") ?? null;
    var inputWarningText = Model?.Content.Value<string>("errorText") ?? null;

    bool.TryParse(TempData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(TempData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(TempData["error_message"]?.ToString()!, out bool error_message);
}
@if(!string.IsNullOrEmpty(uniqueName))
{
    <div id="@uniqueName" class="formInputGroup">
        @if(!string.IsNullOrEmpty(labelText))
        {
            <label for="@uniqueName">@labelText</label>
        }
        <input class="formInput" placeholder="@inputPlaceholderText" id="@uniqueName" name="@uniqueName" type="@inputType" required="@isRequired" />
        @if (TempData["error_email"] != null && @uniqueName == "Email")
        {
            <span class="dangerText">You must enter a valid Email</span>
        }
        @if (TempData["error_name"] != null && @uniqueName == "Name")
        {
            <span class="dangerText">You must enter a name</span>
        }
        @if (TempData["error_message"] != null && @uniqueName == "Message")
        {
            <span class="dangerText">You must enter a message</span>
        }
    </div>
}