@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using static Umbraco.Cms.Core.PropertyEditors.ValueConverters.ColorPickerValueConverter;

@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var spacingTopClass = (Model!.Content.Value<bool>("addSpaceToTop")) ? "addSpaceToTop" : "";
    var spacingBottomClass = (Model!.Content.Value<bool>("addSpaceToBottom")) ? "addSpaceToBottom" : "";
    var centerContent = (Model!.Content.Value<bool>("centerContentInSection")) ? "centerContent" : "";
    var standardSectionHeight = (Model!.Content.Value<bool>("standardSectionHeight")) ? "standardSectionHeight" : "";

    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null; 
    var sectionBackgroundImageAltText = Model?.Content.Value<string>("sectionBackgroundImageAltText") ?? "Section Image"; 

    var sectionBackgroundColor = Model?.Content.Value<PickedColor>("sectionBackgroundColor")?.Label.ToLower() ?? "transparent";
}

@if(sectionBackgroundColor != null)
{
    <style>
        .sectionBackgroundColor
        {
            background-color: var(--color-@sectionBackgroundColor);
        }
    </style>
}


<section id="@sectionId" class="section sectionBackgroundColor @spacingTopClass @spacingBottomClass @standardSectionHeight">
    <div class="container @centerContent">
        @if(!string.IsNullOrEmpty(sectionBackgroundImage))
        {
            <img class="backgroundImage" src="@sectionBackgroundImage" alt="@sectionBackgroundImageAltText" />
        }
        @await Html.GetBlockGridItemAreasHtmlAsync(Model!)
    </div>
</section>